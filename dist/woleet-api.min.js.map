{"version":3,"sources":["woleet-api.js"],"names":["root","factory","woleet","window","req","message","statusText","length","this","code","status","name","response","getJSON","url","options","arguments","undefined","XMLHttpRequest","Promise","resolve","reject","JSON","parse","onerror","RequestError","open","method","token","setRequestHeader","responseType","json","data","stringify","makeTransaction","txId","confirmations","confirmedOn","blockHash","opReturn","toString","prototype","create","Error","constructor","api","receipt","anchor","woleetAPI","setDefaultProvider","transaction","default_api","get","then","res","txid","Date","time","blockhash","output","scriptPubKey","asm","split","vout","find","o","hasOwnProperty","script","outputs","error","hash","confirmed","block_hash","data_hex","getAnchorIDs","size","anchorId","isSHA256","sha256RegExp","test","_getJSON","_woleetAPI"],"mappings":"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","file":"woleet-api.min.js","sourcesContent":["/**\n * @typedef {Object}   AnchorIDsPage\n * @typedef {String[]} Page.content array of anchorID\n * @typedef {Number}   Page.totalPages number of pages with the current size\n * @typedef {Number}   Page.totalElements number of elements matching the request\n * @typedef {Boolean}  Page.last boolean that indicates if the current page is the last one\n * @typedef {Boolean}  Page.sort boolean that indicates if the current page is the last one\n * @typedef {Boolean}  Page.first boolean that indicates if the current page is the first one\n * @typedef {Number}   Page.numberOfElements number of elements matching the request on the current page\n * @typedef {Number}   Page.size current page size\n * @typedef {Number}   Page.number current number (starting at 0)\n */\n\n;(function (root, factory) {\n    root.woleet = factory(root.woleet)\n})(window, function (woleet) {\n\n    function RequestError(req) {\n        this.name = 'getJSON';\n        this.message = req.statusText && req.statusText.length ? req.statusText : 'Error while getting data';\n        this.code = req.status;\n        //noinspection JSUnusedGlobalSymbols\n        this.body = req.response;\n        this.stack = (new Error()).stack;\n    }\n\n    RequestError.prototype = Object.create(Error.prototype);\n    //noinspection JSUnusedGlobalSymbols\n    RequestError.prototype.constructor = RequestError;\n\n    /**\n     * @param {String} url\n     * @param {{method?:string, data?:string, token?:string}} options\n     * @returns {Promise}\n     */\n    function getJSON(url, options = {}) {\n        const req = new XMLHttpRequest();\n        return new Promise(function (resolve, reject) {\n\n            req.onload = function () {\n\n                switch (req.status) {\n                    case 200:\n                    case 201:\n                        typeof req.response == \"string\" ? resolve(JSON.parse(req.response)) : resolve(req.response); // ie\n                        break;\n                    case 404:\n                        resolve(null);\n                        break;\n                    default:\n                        reject(new RequestError(req));\n                        break;\n                }\n            };\n\n            req.onerror = function () {\n                reject(new RequestError(req));\n            };\n\n            req.open(options.method || \"GET\", url, true);\n            if (options.token) req.setRequestHeader(\"Authorization\", \"Bearer \" + options.token);\n            if (options.method == 'POST') req.setRequestHeader('Content-Type', 'application/json');\n            req.setRequestHeader('Accept', 'application/json');\n            req.responseType = \"json\";\n            req.json = \"json\";\n            req.send(typeof options.data == 'object' ? JSON.stringify(options.data) : options.data);\n        });\n    }\n\n    /**\n     * @param {String} txId\n     * @param {Number} confirmations\n     * @param {Date} confirmedOn\n     * @param {String} blockHash\n     * @param {String} opReturn\n     */\n    function makeTransaction(txId, confirmations, confirmedOn, blockHash, opReturn) {\n\n        if (confirmedOn.toString() == \"Invalid Date\")\n            confirmedOn = null;\n\n        return {\n            txId: txId,\n            confirmations: confirmations,\n            confirmedOn: confirmedOn,\n            blockHash: blockHash,\n            opReturn: opReturn\n        }\n    }\n\n    const woleetAPI = \"https://api.woleet.io/v1\";\n    const api = woleet || {};\n    api.receipt = api.receipt || {};\n    api.anchor = api.anchor || {};\n\n    api.transaction = (function () {\n        let default_api = 'woleet.io';\n\n        return {\n            setDefaultProvider: function (api) {\n                switch (api) {\n                    case 'blockcypher.com':\n                        default_api = api;\n                        break;\n                    case 'woleet.io':\n                        default_api = api;\n                        break;\n                    case 'chain.so':\n                    default:\n                        default_api = 'chain.so';\n                        break;\n                }\n            },\n\n            /**\n             * @param txId\n             * @returns {Promise.<Transaction>}\n             */\n            get: function (txId) {\n                switch (default_api) {\n                    case 'woleet.io':\n                        return getJSON(woleetAPI + '/bitcoin/transaction/' + txId)\n                            .then((res) => {\n                                if (!res) {\n                                    throw new Error('tx_not_found');\n                                } else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.txid, res.confirmations, new Date(res.time * 1000), res.blockhash || 0,\n                                        ((output) => output ? ((output.scriptPubKey.asm).split(' '))[1] : null)((res.vout || [])\n                                            .find((o) => o.hasOwnProperty('scriptPubKey')\n                                            && o.scriptPubKey.hasOwnProperty('asm')\n                                            && o.scriptPubKey.asm.startsWith('OP_RETURN'))));\n                                }\n                            });\n                    case 'chain.so':\n                        return getJSON('https://chain.so/api/v2/get_tx/BTC/' + txId)\n                            .then((res) => {\n                                if (!res || res.status == 'fail') {\n                                    throw new Error('tx_not_found');\n                                } else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.data.txid, res.data.confirmations, new Date(res.data.time * 1000), res.data.blockhash,\n                                        ((output) => output ? ((output.script).split(' '))[1] : null)((res.data.outputs || [])\n                                            .find((o) => o.hasOwnProperty('script')\n                                            && o.script.startsWith('OP_RETURN'))));\n                                }\n                            });\n                    case 'blockcypher.com':\n                        return getJSON('https://api.blockcypher.com/v1/btc/main/txs/' + txId)\n                            .then((res) => {\n                                if (!res || res.error) {\n                                    throw new Error('tx_not_found');\n                                } else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.hash, res.confirmations, new Date(res.confirmed), res.block_hash,\n                                        ((output) => output ? output.data_hex : null)((res.outputs || [])\n                                            .find((o) => o.hasOwnProperty('data_hex'))));\n                                }\n                            });\n                }\n            }\n        }\n    })();\n\n    /**\n     * @param {String} hash\n     * @param {Number} [size]\n     * @returns {Promise<AnchorIDsPage>}\n     */\n    api.anchor.getAnchorIDs = function (hash, size) {\n        size = size || 20;\n        return getJSON(woleetAPI + \"/anchorids?size=\" + size + \"&hash=\" + hash)\n    };\n\n\n    /**\n     * @param {String} anchorId\n     * @returns {Promise<Receipt>}\n     */\n    api.receipt.get = function (anchorId) {\n        return getJSON(woleetAPI + \"/receipt/\" + anchorId).then(function (res) {\n            if (!res) {\n                throw new Error('not_found');\n            }\n            else {\n                return res;\n            }\n        })\n    };\n\n    /**\n     * @param {Hash} hash\n     * @returns {boolean}\n     */\n    api.isSHA256 = function (hash) {\n        const sha256RegExp = /^[A-Fa-f0-9]{64}$/;\n        return sha256RegExp.test(hash);\n    };\n\n    api._getJSON = getJSON;\n    api._woleetAPI = woleetAPI;\n\n    return api;\n});\n\n"]}
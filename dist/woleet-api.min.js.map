{"version":3,"sources":["woleet-api.js"],"names":["root","factory","woleet","window","RequestError","this","name","req","statusText","length","status","code","stack","Error","prototype","XMLHttpRequest","Promise","resolve","reject","onload","response","JSON","parse","onerror","open","url","responseType","makeTransaction","txId","confirmations","confirmedOn","blockHash","opReturn","Object","create","constructor","woleetAPI","api","receipt","transaction","setDefaultProvider","default_api","get","getJSON","then","res","opr_return_found","txid","Date","time","blockhash","outputs","output","forEach","scriptPubKey","hasOwnProperty","indexOf","asm","split","vout","script","data","error","hash","confirmed","block_hash","data_hex","anchor","getAnchorIDs","size","anchorId","isSHA256","sha256RegExp","test"],"mappings":"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","file":"woleet-api.min.js","sourcesContent":["/**\n * @typedef {Object}   AnchorIDsPage\n * @typedef {String[]} Page.content array of anchorID\n * @typedef {Number}   Page.totalPages number of pages with the current size\n * @typedef {Number}   Page.totalElements number of elements matching the request\n * @typedef {Boolean}  Page.last boolean that indicates if the current page is the last one\n * @typedef {Boolean}  Page.sort boolean that indicates if the current page is the last one\n * @typedef {Boolean}  Page.first boolean that indicates if the current page is the first one\n * @typedef {Number}   Page.numberOfElements number of elements matching the request on the current page\n * @typedef {Number}   Page.size current page size\n * @typedef {Number}   Page.number current number (starting at 0)\n */\n\n;(function (root, factory) {\n    root.woleet = factory(root.woleet)\n})(window, function (woleet) {\n\n    function RequestError(req) {\n        this.name = 'getJSON';\n        this.message = req.statusText && req.statusText.length ? req.statusText : 'Error while getting data';\n        this.code = req.status;\n        //noinspection JSUnusedGlobalSymbols\n        this.body = req.response;\n        this.stack = (new Error()).stack;\n    }\n\n    RequestError.prototype = Object.create(Error.prototype);\n    //noinspection JSUnusedGlobalSymbols\n    RequestError.prototype.constructor = RequestError;\n\n    function getJSON(url) {\n        var req = new XMLHttpRequest();\n\n        return new Promise(function (resolve, reject) {\n\n            req.onload = function () {\n\n                switch (req.status) {\n                    case 200:\n                    case 201:\n                        typeof req.response == \"string\" ? resolve(JSON.parse(req.response)) : resolve(req.response); // ie\n                        break;\n                    case 404:\n                        resolve(null);\n                        break;\n                    default:\n                        reject(new RequestError(req));\n                        break;\n                }\n            };\n\n            req.onerror = function () {\n                reject(new RequestError(req));\n            };\n\n            req.open(\"GET\", url, true);\n            req.responseType = \"json\";\n            req.json = \"json\";\n            req.send();\n        });\n    }\n\n    /**\n     * @param {String} txId\n     * @param {Number} confirmations\n     * @param {Date} confirmedOn\n     * @param {String} blockHash\n     * @param {String} opReturn\n     */\n    function makeTransaction(txId, confirmations, confirmedOn, blockHash, opReturn) {\n\n        if (confirmedOn.toString() == \"Invalid Date\")\n            confirmedOn = null;\n\n        return {\n            txId: txId,\n            confirmations: confirmations,\n            confirmedOn: confirmedOn,\n            blockHash: blockHash,\n            opReturn: opReturn\n        }\n    }\n\n    var woleetAPI = \"https://api.woleet.io/v1\";\n    var api = woleet || {};\n    api.receipt = api.receipt || {};\n    api.anchor = api.anchor || {};\n\n    api.transaction = (function () {\n        var default_api = 'woleet.io';\n\n        return {\n            setDefaultProvider: function (api) {\n                switch (api) {\n                    case 'blockcypher.com':\n                        default_api = api;\n                        break;\n                    case 'woleet.io':\n                        default_api = api;\n                        break;\n                    case 'chain.so':\n                    default:\n                        default_api = 'chain.so';\n                        break;\n                }\n            },\n\n            /**\n             * @param txId\n             * @returns {Promise.<Transaction>}\n             */\n            get: function (txId) {\n                switch (default_api) {\n                    case 'woleet.io':\n                        return getJSON(woleetAPI + '/bitcoin/transaction/' + txId)\n                            .then(function (res) {\n                                if (!res) {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.txid, res.confirmations, new Date(res.time * 1000), res.blockhash || 0,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('scriptPubKey')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    if (output.scriptPubKey.hasOwnProperty('asm')) {\n                                                        //noinspection JSUnresolvedVariable\n                                                        if (output.scriptPubKey.asm.indexOf('OP_RETURN') != -1) {\n                                                            //noinspection JSUnresolvedVariable\n                                                            opr_return_found = (((output.scriptPubKey.asm).split(' '))[1]);\n                                                        }\n                                                    }\n                                                }\n                                                if (opr_return_found) return true;//breaks foreach\n                                            });\n                                            return opr_return_found;\n                                        }(res.vout || []))\n                                    );\n                                }\n                            });\n                    case 'chain.so':\n                        return getJSON('https://chain.so/api/v2/get_tx/BTC/' + txId)\n                            .then(function (res) {\n                                if (!res || res.status == 'fail') {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.data.txid, res.data.confirmations, new Date(res.data.time * 1000), res.data.blockhash,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('script')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    if (output.script.indexOf('OP_RETURN') != -1) {\n                                                        //noinspection JSUnresolvedVariable\n                                                        opr_return_found = (((output.script).split(' '))[1]);\n                                                    }\n                                                    if (opr_return_found) return true;//breaks foreach\n                                                }\n                                            });\n                                            return opr_return_found;\n                                        }(res.data.outputs || []))\n                                    );\n                                }\n                            });\n                    case 'blockcypher.com':\n                        return getJSON('https://api.blockcypher.com/v1/btc/main/txs/' + txId)\n                            .then(function (res) {\n                                if (!res || res.error) {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.hash, res.confirmations, new Date(res.confirmed), res.block_hash,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('data_hex')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    opr_return_found = output.data_hex;\n                                                }\n                                                if (opr_return_found) return true;//breaks foreach\n                                            });\n                                            return opr_return_found;\n                                        }(res.outputs || []))\n                                    );\n                                }\n                            });\n                }\n            }\n        }\n    })();\n\n    /**\n     * @param {String} hash\n     * @param {Number} [size]\n     * @returns {Promise<AnchorIDsPage>}\n     */\n    api.anchor.getAnchorIDs = function (hash, size) {\n        size = size || 20;\n        return getJSON(woleetAPI + \"/anchorids?size=\" + size + \"&hash=\" + hash)\n    };\n\n\n    /**\n     * @param {String} anchorId\n     * @returns {Promise<Receipt>}\n     */\n    api.receipt.get = function (anchorId) {\n        return getJSON(woleetAPI + \"/receipt/\" + anchorId).then(function (res) {\n            if (!res) {\n                throw new Error('not_found');\n            }\n            else {\n                return res;\n            }\n        })\n    };\n\n    /**\n     * @param {Hash} hash\n     * @returns {boolean}\n     */\n    api.isSHA256 = function (hash) {\n        var sha256RegExp = /^[A-Fa-f0-9]{64}$/;\n        return sha256RegExp.test(hash);\n    };\n\n    return api;\n});\n\n"]}
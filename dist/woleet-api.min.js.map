{"version":3,"sources":["woleet-api.js"],"names":["root","factory","woleet","window","RequestError","this","name","req","statusText","length","status","code","stack","Error","prototype","XMLHttpRequest","Promise","resolve","reject","onload","response","JSON","parse","onerror","open","url","responseType","makeTransaction","tx_id","confirmations","confirmed_at","block_hash","op_return","confirmedAt","constructor","create","woleetAPI","api","receipt","anchor","default_api","setDefaultProvider","get","then","res","getJSON","data","txid","Date","time","blockhash","opr_return_found","forEach","output","vout","hasOwnProperty","scriptPubKey","asm","indexOf","split","script","error","outputs","hash","confirmed","data_hex","size","anchorId","isSHA256","sha256RegExp","test"],"mappings":"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","file":"woleet-api.min.js","sourcesContent":["/**\n * @typedef {Object}   AnchorIDsPage\n * @typedef {String[]} Page.content array of anchorID\n * @typedef {Number}   Page.totalPages number of pages with the current size\n * @typedef {Number}   Page.totalElements number of elements matching the request\n * @typedef {Boolean}  Page.last boolean that indicates if the current page is the last one\n * @typedef {Boolean}  Page.sort boolean that indicates if the current page is the last one\n * @typedef {Boolean}  Page.first boolean that indicates if the current page is the first one\n * @typedef {Number}   Page.numberOfElements number of elements matching the request on the current page\n * @typedef {Number}   Page.size current page size\n * @typedef {Number}   Page.number current number (starting at 0)\n */\n\n;(function (root, factory) {\n    root.woleet = factory(root.woleet)\n})(window, function (woleet) {\n\n    function RequestError(req) {\n        this.name = 'getJSON';\n        this.message = req.statusText && req.statusText.length ? req.statusText : 'Error wile getting data';\n        this.code = req.status;\n        //noinspection JSUnusedGlobalSymbols\n        this.body = req.response;\n        this.stack = (new Error()).stack;\n    }\n    RequestError.prototype = Object.create(Error.prototype);\n    //noinspection JSUnusedGlobalSymbols\n    RequestError.prototype.constructor = RequestError;\n\n    function getJSON(url) {\n        var req = new XMLHttpRequest();\n\n        return new Promise(function (resolve, reject) {\n\n            req.onload = function () {\n\n                switch (req.status) {\n                    case 200 :\n                    case 201 :\n                        typeof req.response == \"string\" ? resolve(JSON.parse(req.response)) : resolve(req.response); // ie\n                        break;\n                    case 404 :\n                        resolve(null);\n                        break;\n                    default :\n                        reject(new RequestError(req));\n                        break;\n                }\n            };\n\n            req.onerror = function () {\n                reject(new RequestError(req));\n            };\n\n            req.open(\"GET\", url, true);\n            req.responseType = \"json\";\n            req.json = \"json\";\n            req.send();\n        });\n    }\n\n    /**\n     * @param {String} tx_id\n     * @param {Number} confirmations\n     * @param {Date} confirmed_at\n     * @param {String} block_hash\n     * @param {String} op_return\n     */\n    function makeTransaction(tx_id, confirmations, confirmed_at, block_hash, op_return) {\n\n        if (confirmed_at.toString() == \"Invalid Date\") confirmed_at = null;\n\n        return {\n            tx_id: tx_id,\n            confirmations: confirmations,\n            confirmedAt: confirmed_at,\n            blockHash: block_hash,\n            opReturn: op_return\n        }\n    }\n\n    var woleetAPI = \"https://api.woleet.io/v1\";\n    var api = woleet || {};\n    api.receipt = api.receipt || {};\n    api.anchor = api.anchor || {};\n\n    api.transaction = (function () {\n        var default_api = 'blockcypher.com';\n\n        return {\n            setDefaultProvider: function (api) {\n                switch (api) {\n                    case 'blockcypher.com':\n                        default_api = api;\n                        break;\n                    case 'woleet.io':\n                        default_api = api;\n                        break;\n                    case 'chain.so':\n                    default:\n                        default_api = 'chain.so';\n                        break;\n                }\n            },\n            /**\n             * @param tx_id\n             * @returns {Promise.<Transaction>}\n             */\n            get: function (tx_id) {\n                switch (default_api) {\n                    case 'woleet.io' :\n                        return getJSON(woleetAPI + '/bitcoin/transaction/' + tx_id)\n                            .then(function (res) {\n                                if (!res || res.status != 200) {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.data.txid, res.data.confirmations, new Date(res.data.time * 1000), res.data.blockhash || 0,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('scriptPubKey')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    if (output.scriptPubKey.hasOwnProperty('asm')) {\n                                                        //noinspection JSUnresolvedVariable\n                                                        if (output.scriptPubKey.asm.indexOf('OP_RETURN') != -1) {\n                                                            //noinspection JSUnresolvedVariable\n                                                            opr_return_found = (((output.scriptPubKey.asm).split(' '))[1]);\n                                                        }\n                                                    }\n                                                }\n                                                if (opr_return_found) return true;//breaks foreach\n                                            });\n                                            return opr_return_found;\n                                        }(res.data.vout || []))\n                                    );\n                                }\n                            });\n                    case 'chain.so' :\n                        return getJSON('https://chain.so/api/v2/get_tx/BTC/' + tx_id)\n                            .then(function (res) {\n                                if (!res || res.status == 'fail') {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.data.txid, res.data.confirmations, new Date(res.data.time * 1000), res.data.blockhash,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('script')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    if (output.script.indexOf('OP_RETURN') != -1) {\n                                                        //noinspection JSUnresolvedVariable\n                                                        opr_return_found = (((output.script).split(' '))[1]);\n                                                    }\n                                                    if (opr_return_found) return true;//breaks foreach\n                                                }\n                                            });\n                                            return opr_return_found;\n                                        }(res.data.outputs || []))\n                                    );\n                                }\n                            });\n                    case 'blockcypher.com' :\n                        return getJSON('https://api.blockcypher.com/v1/btc/main/txs/' + tx_id)\n                            .then(function (res) {\n                                if (!res || res.error) {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.hash, res.confirmations, new Date(res.confirmed), res.block_hash,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('data_hex')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    opr_return_found = output.data_hex;\n                                                }\n                                                if (opr_return_found) return true;//breaks foreach\n                                            });\n                                            return opr_return_found;\n                                        }(res.outputs || []))\n                                    );\n                                }\n                            });\n                }\n            }\n        }\n    })();\n\n    /**\n     * @param {String} hash\n     * @param {Number} [size]\n     * @returns {Promise<AnchorIDsPage>}\n     */\n    api.anchor.getAnchorIDs = function (hash, size) {\n        size = size || 20;\n        return getJSON(woleetAPI + \"/anchorids?size=\" + size + \"&hash=\" + hash)\n    };\n\n\n    /**\n     * @param {String} anchorId\n     * @returns {Promise<Receipt>}\n     */\n    api.receipt.get = function (anchorId) {\n        return getJSON(woleetAPI + \"/receipt/\" + anchorId).then(function (res) {\n            if (!res) {\n                throw new Error('not_found');\n            }\n            else {\n                return res;\n            }\n        })\n    };\n\n    /**\n     * @param {Hash} hash\n     * @returns {boolean}\n     */\n    api.isSHA256 = function (hash) {\n        var sha256RegExp = /^[A-Fa-f0-9]{64}$/;\n        return sha256RegExp.test(hash);\n    };\n\n    return api;\n\n});\n\n"]}
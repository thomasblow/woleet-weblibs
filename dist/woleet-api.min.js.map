{"version":3,"sources":["woleet-api.js"],"names":["root","factory","woleet","window","req","message","statusText","length","this","code","status","name","response","getJSON","url","options","XMLHttpRequest","Promise","resolve","reject","onload","JSON","parse","RequestError","onerror","method","token","setRequestHeader","open","data","stringify","makeTransaction","txId","confirmations","confirmedOn","blockHash","opReturn","toString","prototype","create","Error","constructor","woleetAPI","api","receipt","anchor","transaction","default_api","setDefaultProvider","get","res","txid","Date","time","blockhash","opr_return_found","forEach","output","hasOwnProperty","scriptPubKey","indexOf","asm","split","vout","then","outputs","script","hash","confirmed","block_hash","data_hex","getAnchorIDs","size","anchorId","sha256RegExp","isSHA256","test","_getJSON","_woleetAPI"],"mappings":"oOAaC,SAAWA,EAAMC,GACdD,EAAKE,OAASD,EAAQD,EAAKE,SAC5BC,OAAQ,SAAUD,GAFnB,QAAUF,GAAVI,GACEJ,KAAKE,KAASD,UACfE,KAAQE,QAAUH,EAAVI,YAAkBF,EAAAE,WAAAC,OAAAH,EAAAE,WAAA,2BAKrBE,KAAKC,KAAOL,EAAIM,OAFhBF,KAAKG,KAAOP,EAAAQ,SACZJ,KAAKH,OAAL,GAAeD,QAAIE,MAgBvB,QAASO,GAAQC,EAAKC,GAClB,GAAIX,GAAM,GAAIY,eAEd,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GAFlCf,EAAAA,OAAUY,WAEP,OAAIC,EAAQP,QAKP,IAAK,KAHTU,IAAS,KAKiCF,EAAX,gBAAhBd,GAAIQ,SAA+BS,KAAKC,MAAMlB,EAAIQ,UAAqBR,EAAIQ,SAHlFR,MACJ,KAAK,KACLc,EAAA,KACI,MACA,SACJC,EAAA,GAAAI,GAAAnB,MAKIA,EAAAoB,QAAA,WAVRL,EAAA,GAAAI,GAAAnB,KAcJA,EAAIoB,KAAAA,EAAUC,QAAY,MAAAX,GAAA,GACtBK,EAAOO,OAAIH,EAAAA,iBAAX,gBAAA,UAAAR,EAAAW,OACHtB,EAFDuB,iBAAA,eAAA,oBAOAvB,EAAIuB,iBAAiB,SAAU,oBAH/BvB,EAAIwB,aAAaH,OACjBrB,EAAIW,KAAAA,OACJX,EAAIuB,KAAiB,UAAjBA,QAAAA,EAAiBE,MAAgBR,KAAAS,UAArCf,EAAAc,MAAAd,EAAAc,QAeR,QAASE,GAAgBC,EAAMC,EAAeC,EAAaC,EAAWC,GAKlE,MAH8B,gBAA1BF,EAAYG,aACZH,EAAc,OADdA,KAAAA,EAKAD,cAAeA,EAFnBC,YAAOA,EACHF,UADGG,EAEHF,SAAAA,GA9DJV,EAAAe,UAAgB1B,OAAhB2B,OAAAC,MAAAF,WAEHf,EAAAe,UAAAG,YAAAlB,CA0DU,IAAAmB,GAAP,2BAOHC,EAAAzC,KAyJD,OArJAyC,GAAIC,QAAUD,EAAIC,YAFlBD,EAAID,OAAAA,EAAYG,WAEhBF,EAAIC,YAAcA,WACdC,GAAAA,GAAaA,WAEbC,QACIC,mBAAc,SAAlBJ,GAIQ,OAAQA,GAFT,IAAA,kBACHK,EAAoBL,CACRA,MACJ,KAAK,YACDI,EAAcJ,CACd,MACJ,KAAK,WACDI,QACAA,EAAA,aAYZE,IAAK,SAAUjB,GACX,OAAQe,GACJ,IAAK,YAFR,MAAUf,GAAMU,EAAA,wBAAAV,GACTe,KAAAA,SAARG,GACS,GAALA,EAOgB,MAAAnB,GAAAmB,EAAAC,KAAAD,EAAAjB,cAAA,GAAAmB,MAAA,IAAAF,EAAAG,MAAAH,EAAAI,WAAA,EACOvB,SAAAA,GAEKwB,GAAAA,GAAJ,IAcOA,OAbCC,GAAQA,QAAA,SAAkBC,GAW1BF,GAVOG,EAAAA,eAAe,iBAEXC,EAAAA,aAAaD,eAAuB,QAEhCC,EAAAA,aAAiBC,IAAQA,QAAA,eAAoB,IAEpDL,EAA6BI,EAAAA,aAAwBE,IAAjCC,MAApB,KAAA,IAIRP,EAAyB,OAAK,IAE/BA,GACTL,EAAYa,UAxBvBlD,MAAQ6B,IAAAA,OAAY,iBA6B3B,KAAA,WAEQ,MAAA7B,GAAI,sCAA8BmB,GAC9BgC,KAAA,SAAUxB,GADd,GAGKU,GAAA,QAAAA,EAAAxC,OAMW,MAAAqB,GAAW2B,EAAAA,KAAeP,KAAtBD,EAAiCrB,KAAAI,cAAA,GAAAmB,MAAA,IAAAF,EAAArB,KAAAwB,MAAAH,EAAArB,KAAAyB,UACjC,SAAAW,GACA,GAAIR,GAAcG,IAYlD,OAXoCK,GAAAT,QAAA,SAAAC,GACAF,GAAAA,EAAAA,eAA6BW,YAE7BX,EAAAA,OAAkBK,QANW,eAMC,IAP1CL,EAAAE,EAAAS,OAAAJ,MAAA,KAAA,IAFHP,GADL,OAAA,IAkBhBA,GACmBL,EAAArB,KAAAoC,aApBH,MAAA,IAAAzB,OAAA,iBA0BA,KAAA,kBACA,MAAA3B,GAAOkB,+CAAiDqB,GAEhDY,KAAA,SAAIT,GACJU,IAAAA,GAAQT,EAAAA,MACJ,KAAA,IAAIC,OAAOC,eAIX,OAAA3B,GAAIwB,EAAkBY,KAAOjB,EAAPjB,cAAY,GAAAmB,MAAAF,EAAAkB,WAAAlB,EAAAmB,WALtC,SAAAJ,GAOOV,GAAAA,GAAP,IAAA,OACEU,GAXHT,QAAP,SAAAC,GArF5B,GAkGyBA,EAAAC,eAAA,cA7EjBH,EAAAE,EAAAa,UArBRf,EAAA,OAAA,IA+F2CA,GAU/CL,EAAAe,sBAeAtB,EAAIC,OAAJ2B,aAAkB,SAAAJ,EAAoBK,GAE9B,MADJA,GAAO3D,GAAQ6B,GACX7B,EAAU6B,EAAA,mBAAA8B,EAAA,SAAAL,IASlBxB,EAAAC,QAAAK,IAAA,SAAAwB,GAVI,MAAO5D,GAAQ6B,EAAY,YAAc+B,GAAUT,KAAK,SAAUd,GAC9D,GAAKA,EAeFwB,MAAAA,EAdC,MAAM,IAAIlC,OAAM,gBAY5BG,EAAIgC,SAAW,SAAUR,GACrB,GAAIO,GAAe,mBACnB,OAAOA,GAAaE,KAAKT,IAG7BxB,EAAIkC,SAAWhE,EACf8B,EAAImC,WAAapC,EAEVC","file":"woleet-api.min.js","sourcesContent":["/**\n * @typedef {Object}   AnchorIDsPage\n * @typedef {String[]} Page.content array of anchorID\n * @typedef {Number}   Page.totalPages number of pages with the current size\n * @typedef {Number}   Page.totalElements number of elements matching the request\n * @typedef {Boolean}  Page.last boolean that indicates if the current page is the last one\n * @typedef {Boolean}  Page.sort boolean that indicates if the current page is the last one\n * @typedef {Boolean}  Page.first boolean that indicates if the current page is the first one\n * @typedef {Number}   Page.numberOfElements number of elements matching the request on the current page\n * @typedef {Number}   Page.size current page size\n * @typedef {Number}   Page.number current number (starting at 0)\n */\n\n;(function (root, factory) {\n    root.woleet = factory(root.woleet)\n})(window, function (woleet) {\n\n    function RequestError(req) {\n        this.name = 'getJSON';\n        this.message = req.statusText && req.statusText.length ? req.statusText : 'Error while getting data';\n        this.code = req.status;\n        //noinspection JSUnusedGlobalSymbols\n        this.body = req.response;\n        this.stack = (new Error()).stack;\n    }\n\n    RequestError.prototype = Object.create(Error.prototype);\n    //noinspection JSUnusedGlobalSymbols\n    RequestError.prototype.constructor = RequestError;\n\n    /**\n     * @param {String} url\n     * @param {{method?:string, data?:string, token?:string}} options\n     * @returns {Promise}\n     */\n    function getJSON(url, options) {\n        var req = new XMLHttpRequest();\n\n        return new Promise(function (resolve, reject) {\n\n            req.onload = function () {\n\n                switch (req.status) {\n                    case 200:\n                    case 201:\n                        typeof req.response == \"string\" ? resolve(JSON.parse(req.response)) : resolve(req.response); // ie\n                        break;\n                    case 404:\n                        resolve(null);\n                        break;\n                    default:\n                        reject(new RequestError(req));\n                        break;\n                }\n            };\n\n            req.onerror = function () {\n                reject(new RequestError(req));\n            };\n\n            req.open(options.method || \"GET\", url, true);\n            if (options.token) req.setRequestHeader(\"Authorization\", \"Bearer \" + options.token);\n            req.setRequestHeader('Content-Type', 'application/json');\n            req.setRequestHeader('Accept', 'application/json');\n            req.responseType = \"json\";\n            req.json = \"json\";\n            req.send(typeof options.data == 'object' ? JSON.stringify(options.data) : options.data);\n        });\n    }\n\n    /**\n     * @param {String} txId\n     * @param {Number} confirmations\n     * @param {Date} confirmedOn\n     * @param {String} blockHash\n     * @param {String} opReturn\n     */\n    function makeTransaction(txId, confirmations, confirmedOn, blockHash, opReturn) {\n\n        if (confirmedOn.toString() == \"Invalid Date\")\n            confirmedOn = null;\n\n        return {\n            txId: txId,\n            confirmations: confirmations,\n            confirmedOn: confirmedOn,\n            blockHash: blockHash,\n            opReturn: opReturn\n        }\n    }\n\n    var woleetAPI = \"https://api.woleet.io/v1\";\n    var api = woleet || {};\n    api.receipt = api.receipt || {};\n    api.anchor = api.anchor || {};\n\n    api.transaction = (function () {\n        var default_api = 'woleet.io';\n\n        return {\n            setDefaultProvider: function (api) {\n                switch (api) {\n                    case 'blockcypher.com':\n                        default_api = api;\n                        break;\n                    case 'woleet.io':\n                        default_api = api;\n                        break;\n                    case 'chain.so':\n                    default:\n                        default_api = 'chain.so';\n                        break;\n                }\n            },\n\n            /**\n             * @param txId\n             * @returns {Promise.<Transaction>}\n             */\n            get: function (txId) {\n                switch (default_api) {\n                    case 'woleet.io':\n                        return getJSON(woleetAPI + '/bitcoin/transaction/' + txId)\n                            .then(function (res) {\n                                if (!res) {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.txid, res.confirmations, new Date(res.time * 1000), res.blockhash || 0,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('scriptPubKey')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    if (output.scriptPubKey.hasOwnProperty('asm')) {\n                                                        //noinspection JSUnresolvedVariable\n                                                        if (output.scriptPubKey.asm.indexOf('OP_RETURN') != -1) {\n                                                            //noinspection JSUnresolvedVariable\n                                                            opr_return_found = (((output.scriptPubKey.asm).split(' '))[1]);\n                                                        }\n                                                    }\n                                                }\n                                                if (opr_return_found) return true;//breaks foreach\n                                            });\n                                            return opr_return_found;\n                                        }(res.vout || []))\n                                    );\n                                }\n                            });\n                    case 'chain.so':\n                        return getJSON('https://chain.so/api/v2/get_tx/BTC/' + txId)\n                            .then(function (res) {\n                                if (!res || res.status == 'fail') {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.data.txid, res.data.confirmations, new Date(res.data.time * 1000), res.data.blockhash,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('script')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    if (output.script.indexOf('OP_RETURN') != -1) {\n                                                        //noinspection JSUnresolvedVariable\n                                                        opr_return_found = (((output.script).split(' '))[1]);\n                                                    }\n                                                    if (opr_return_found) return true;//breaks foreach\n                                                }\n                                            });\n                                            return opr_return_found;\n                                        }(res.data.outputs || []))\n                                    );\n                                }\n                            });\n                    case 'blockcypher.com':\n                        return getJSON('https://api.blockcypher.com/v1/btc/main/txs/' + txId)\n                            .then(function (res) {\n                                if (!res || res.error) {\n                                    throw new Error('tx_not_found');\n                                }\n                                else {\n                                    //noinspection JSUnresolvedVariable\n                                    return makeTransaction(res.hash, res.confirmations, new Date(res.confirmed), res.block_hash,\n                                        (function (outputs) {\n                                            var opr_return_found = null;\n                                            outputs.forEach(function (output) {\n                                                if (output.hasOwnProperty('data_hex')) {\n                                                    //noinspection JSUnresolvedVariable\n                                                    opr_return_found = output.data_hex;\n                                                }\n                                                if (opr_return_found) return true;//breaks foreach\n                                            });\n                                            return opr_return_found;\n                                        }(res.outputs || []))\n                                    );\n                                }\n                            });\n                }\n            }\n        }\n    })();\n\n    /**\n     * @param {String} hash\n     * @param {Number} [size]\n     * @returns {Promise<AnchorIDsPage>}\n     */\n    api.anchor.getAnchorIDs = function (hash, size) {\n        size = size || 20;\n        return getJSON(woleetAPI + \"/anchorids?size=\" + size + \"&hash=\" + hash)\n    };\n\n\n    /**\n     * @param {String} anchorId\n     * @returns {Promise<Receipt>}\n     */\n    api.receipt.get = function (anchorId) {\n        return getJSON(woleetAPI + \"/receipt/\" + anchorId).then(function (res) {\n            if (!res) {\n                throw new Error('not_found');\n            }\n            else {\n                return res;\n            }\n        })\n    };\n\n    /**\n     * @param {Hash} hash\n     * @returns {boolean}\n     */\n    api.isSHA256 = function (hash) {\n        var sha256RegExp = /^[A-Fa-f0-9]{64}$/;\n        return sha256RegExp.test(hash);\n    };\n\n    api._getJSON = getJSON;\n    api._woleetAPI = woleetAPI;\n\n    return api;\n});\n\n"]}